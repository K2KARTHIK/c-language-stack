#include <stdio.h>
#include <stdlib.h>
typedef struct Node {
    int data;
    struct Node* next;
} Node;
typedef struct Stack {
    Node* top;
} Stack;
void initialize(Stack* stack) {
    stack->top = NULL;
}
int is_empty(Stack* stack) 
{
    return stack->top == NULL;
}
void push(Stack* stack, int data) 
{
    Node* new_node = (Node*) malloc(sizeof(Node));
    new_node->data = data;
    new_node->next = stack->top;
    stack->top = new_node;
}
int pop(Stack* stack) 
{
    if (is_empty(stack)) 
    {
        printf("Stack Underflow\n");
        return -1;
    }
    int data = stack->top->data;
    Node* temp = stack->top;
    stack->top = stack->top->next;
    free(temp);
    return data;
}
int peek(Stack* stack) 
{
    if (is_empty(stack)) 
    {
        printf("Stack Underflow\n");
        return -1;
    }
    else
    {
        return stack->top->data;
    }
}
void print_stack(Stack* stack) 
{
    Node* current = stack->top;
    printf("Stack: ");
    while (current != NULL) 
    {
        printf("%d ", current->data);
        current = current->next;
    }
    printf("\n");
}
int main() 
{
    Stack stack;
 initialize(&stack);
    int n,x;
    printf("enter the size ");
    scanf("%d",&n);
    printf("enter the elements ");
    for(int i=0;i<n;i++){
        scanf("%d",&x);
        push(&stack,x);
    }

    print_stack(&stack);

    pop(&stack);
    print_stack(&stack);
    
    push(&stack, x);
    print_stack(&stack);

    int top_element = peek(&stack);
    printf("Top element: %d\n", top_element);
    print_stack(&stack);

    return 0;
}
