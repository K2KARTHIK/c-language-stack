// stack using linked lists
// #include <stdio.h>
// #include <stdlib.h>
// struct Node 
// {
//     int data;
//     struct Node* next;
// };
// struct Node *top;
// void push()
// {
//     int x;
//     printf("Enter the data \n");
//     scanf("%d",&x); 
//     struct Node *new_node;
//     new_node = (struct Node*)malloc(sizeof(struct Node));
//     new_node->data=x;
//     new_node->next=top;
//     top=new_node;
// }
// void pop()
// {
//     struct Node *temp;
//     temp=top;
//     if(top == NULL)
//     {
//         printf("Underflow\n");
//     }
//     else
//     {
//         printf("%d is poped out\n",top->data);
//         top=top->next;
//         free(temp);
//     }

// }
// void peek()
// {
//     if(top == NULL)
//     {
//         printf("Stack is empty\n");
//     }
//     else
//     {
//         printf("%d",top->data);
//     }
// }
// void display()
// {
//     struct Node *temp;
//     temp=top;
//     if(top == NULL)
//     {
//         printf("Stack is empty\n");
//     }
//     else
//     {
//         while(temp!=0)
//         {
//             printf("%d",temp->data);
//             temp=temp->next;
//         }
//     }

// }
// int main()
// {
//     int choice;
//     while(1)
//     {
//         printf("Enter 1 to push \n");
//         printf("Enter 2 to pop \n");
//         printf("Enter 3 to peek \n");
//         printf("Enter 4 to display \n");
//         scanf("%d",&choice);
//         switch(choice)
//         {
//             case 1:
//                 push();
//                 break;
//             case 2:
//                 pop();
//                 break;
//             case 3:
//                 peek();
//                 break;
//             case 4:
//                 display();
//                 break;
//             default:
//                 printf("invalid\n");
//                 break;
//         }
//     }
// }    
